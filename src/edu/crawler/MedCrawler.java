package edu.upenn.cis455.crawler;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.net.ssl.HttpsURLConnection;

import org.apache.log4j.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.DeathByCaptcha.Captcha;
import com.DeathByCaptcha.SocketClient;
import com.sleepycat.je.rep.impl.node.Feeder.ExitException;

import edu.upenn.cis455.crawler.info.URLInfo;
import edu.upenn.cis455.utils.HttpUtils;

public class MedCrawler {
	
	private static final String HOST = "http://publicindex.sccourts.org";
	private static final String SEARCH_PAGE = "PISearch.aspx";
	private static final String ERROR_PAGE = "PIError.aspx";
	
	

	public static String getCaptchaImgUrl(Document doc) {
		if (doc == null) return null;
		
		Element captchaDiv = doc.getElementById("c_pierror_contentplaceholder1_botdetectcaptcha_CaptchaImageDiv");
		if (captchaDiv == null) return null;
		
		Elements imgElements = captchaDiv.getElementsByTag("img");
		if (imgElements == null || imgElements.size() != 1) {
			System.out.println("No captcha image or multiple images");
			return null;
		}
		Element imgElement = imgElements.get(0);
		String captcha_url = HOST + imgElement.attr("src");
		System.out.println(captcha_url);		
		
		return captcha_url;
	}
	


	private static String getCaptchaId(String captchaImgUrl) throws URISyntaxException {
		//http://publicindex.sccourts.org/Florence/PublicIndex/BotDetectCaptcha.ashx?get=image&c=c_pierror_contentplaceholder1_botdetectcaptcha&t=e73344588a7847c4bd7c8ad0f43689a4
		URI captchaUrl = new URI(captchaImgUrl);
		String query = captchaUrl.getQuery();
		String [] queryParams = query.split("&");
		
		for (int i = 0; i < queryParams.length; ++i) {
			String [] keyVals = queryParams[i].split("=");
			if (keyVals.length == 2 && "t".equals(keyVals[0])) {
				System.out.println(keyVals[1]);
				return keyVals[1];
			}
		}			
		return null;
	}


	
	private static String getCaptchaText() {
		SocketClient client = new SocketClient("ishanpenn", "ishanpenn011235");

		Captcha captcha = null;                                                                                     
		try {
			captcha = client.decode("captcha.jpg", 120);
		} catch (Exception e) {
			System.out.println("Failed uploading CAPTCHA - " + e.getMessage());                                                         
		}
		if (null != captcha) {
			System.out.println("CAPTCHA " + captcha.id + " solved: " + captcha.text);
			return captcha.text;
		}
		return null;
	}

	
	public static void extractAndSaveCaptcha(String captchaImgUrl) throws IOException {
		URL captchaUrl = new URL(captchaImgUrl);
		
		HttpURLConnection connection = (HttpURLConnection) captchaUrl.openConnection();
	//	connection.setRequestMethod(method);

		connection.setRequestProperty("Accept",	"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8");
		// connection.setRequestProperty("Accept-Encoding","gzip, deflate");
		connection.setRequestProperty("Accept-Language", "en-US,en;q=0.8");
		connection.setRequestProperty("Cache-Control", "max-age=0");
		connection.setRequestProperty("Connection", "keep-alive");
		//connection.setRequestProperty("Cookie", "gsScrollPos=0; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQUIPAAAAAABTX0gXoHBCygATrHOHndYo; incap_ses_237_666243=6hJUSqmHXxXvxvnpcf9JA4Y65FYAAAAAYZDl38DshtltL02LUipAuw==; __utma=152568635.1581997736.1455313479.1457760018.1457801266.5; __utmc=152568635; __utmz=152568635.1457801266.5.3.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PIError.aspx|utmcmd=referral; incap_ses_221_666243=NEmICnShS0SX+lRFkycRAwB25FYAAAAA4DJAun04OQlA3OzfatELUQ==; ___utmvmfOuFiPi=SwNHxuwWpzo; ___utmvbfOuFiPi=yZf XBeOFalt: StL");
		connection.setRequestProperty("Cookie", "gsScrollPos=; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; incap_ses_237_666243=H+EKIJ45y36WpT/vcf9JA8hc5lYAAAAA3StPmKBg0CU38rMy049ecA==; incap_ses_220_666243=ewo+AoqEmTKWEGqQFaINAxMo51YAAAAAQmh80cxm2tPuAJKXKW7QgA==; __utma=152568635.1581997736.1455313479.1457801266.1457992530.6; __utmc=152568635; __utmz=152568635.1457992530.6.4.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PISearch.aspx|utmcmd=referral; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQkIPAAAAAACA68hyAZ6C1b1n2tMjJhoix/6MhmdjwyZ2; incap_ses_221_666243=kKYEPSEwb3BNPrtPkycRAyV351YAAAAAxmLVIY7hviPCifny2/yq8Q==");
		connection.setRequestProperty("Host", "publicindex.sccourts.org");
		connection.setRequestProperty("Origin", "http://publicindex.sccourts.org");
		connection.setRequestProperty("Referer", "http://publicindex.sccourts.org/Florence/PublicIndex/PISearch.aspx");
		connection.setRequestProperty("Upgrade-Insecure-Requests", "1");
		connection.setRequestProperty("User-Agent",	"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36");

		//connection.setDoOutput(true);
		InputStream is1 = connection.getInputStream();
		try {
			System.out.println("Saving captcha file");
			FileOutputStream out = new FileOutputStream("captcha.jpg");
			BufferedImage image = ImageIO.read(is1);				
			ImageIO.write(image, "jpg", out);
			
		} catch (Exception e) {
			System.out.println("Captcha issues " + e.getMessage());
		}
		is1.close();
	}
	

	private static void revalidateWithCaptcha(String url, String captchaText, String captchaId) throws IOException {
		
		URL urlInstance = new URL(url + "/" + ERROR_PAGE);
		HttpURLConnection connection = (HttpURLConnection) urlInstance.openConnection();
	//	connection.setRequestMethod(method);

		connection.setRequestProperty("Accept",	"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8");
		// connection.setRequestProperty("Accept-Encoding","gzip, deflate");
		connection.setRequestProperty("Accept-Language", "en-US,en;q=0.8");
		connection.setRequestProperty("Cache-Control", "max-age=0");
		connection.setRequestProperty("Connection", "keep-alive");
		connection.setRequestProperty("Content-Length", "114506");
		connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
		connection.setRequestProperty("Cookie", "gsScrollPos=0; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; incap_ses_237_666243=6hJUSqmHXxXvxvnpcf9JA4Y65FYAAAAAYZDl38DshtltL02LUipAuw==; __utma=152568635.1581997736.1455313479.1457760018.1457801266.5; __utmc=152568635; __utmz=152568635.1457801266.5.3.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PIError.aspx|utmcmd=referral; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQUIPAAAAAABTX0gXoHBCygATrHOHndYo; incap_ses_221_666243=NEmICnShS0SX+lRFkycRAwB25FYAAAAA4DJAun04OQlA3OzfatELUQ==");
		connection.setRequestProperty("Host", "publicindex.sccourts.org");
		connection.setRequestProperty("Origin", "http://publicindex.sccourts.org");
		connection.setRequestProperty("Referer", "http://publicindex.sccourts.org/Florence/PublicIndex/PISearch.aspx");
		connection.setRequestProperty("Upgrade-Insecure-Requests", "1");
		connection.setRequestProperty("User-Agent",	"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36");

		Map<String, String> params = new HashMap<>();
		
		params.put("__VIEWSTATE", "/wEPDwUJMTk2NDQ4NzY3ZGS0AjwLrTk577rDL9tuSNl0WC9mI7UaVNyTXGg0/MLXag==");
		params.put("__VIEWSTATEGENERATOR", "079EE245");
		params.put("__EVENTVALIDATION",	"/wEdAAO1QoftnZ+JEr9k1p/StIwvX3LD91CpZ3r7YmjGY3PROg7m+kMKY3IaT2Nwgw+sZryPUtdCi69pgCpOGk0dLYkoG/c/9Vp9R4pc7graectnqQ==");
		params.put("LBD_VCID_c_pierror_contentplaceholder1_botdetectcaptcha", captchaId);		
		params.put("ctl00$ContentPlaceHolder1$BotDetectCaptchaCode", captchaText);
		params.put("ctl00$ContentPlaceHolder1$BotDetectCaptchaButton", "Validate");
		
		StringBuilder postData = new StringBuilder();
		for (Map.Entry<String, String> param : params.entrySet()) {
			if (postData.length() != 0)
				postData.append('&');
			
			postData.append(URLEncoder.encode(param.getKey(), "UTF-8"));
			postData.append('=');
			postData.append(URLEncoder.encode(String.valueOf(param.getValue()),
					"UTF-8"));
		}
		byte[] postDataBytes = postData.toString().getBytes("UTF-8");
		connection.setDoOutput(true);
		connection.getOutputStream().write(postDataBytes);
		
		Document doc = Jsoup.parse(connection.getInputStream(), null, "");
		if (doc == null) {
			System.out.println("Response in revalidation - Document is null");
		}
		
		//System.out.println(doc.body().toString());
		
		
		return;

		
	}

	
	public static InputStream getListByFields(String url, String method,
		Map<String, String> fields)	throws IOException {
		
		System.out.println(url + "/" + SEARCH_PAGE);
		System.out.println("Crawling for phrase - " +  fields.get("lastnamephrase") + " and caseType " + fields.get("casetype"));
		
		URL urlInstance = new URL(url + "/" + SEARCH_PAGE);
		HttpURLConnection connection = (HttpURLConnection) urlInstance.openConnection();
	//	connection.setRequestMethod(method);

		connection.setRequestProperty("Accept",	"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8");
		// connection.setRequestProperty("Accept-Encoding","gzip, deflate");
		connection.setRequestProperty("Accept-Language", "en-US,en;q=0.8");
		connection.setRequestProperty("Cache-Control", "max-age=0");
		connection.setRequestProperty("Connection", "keep-alive");
		connection.setRequestProperty("Content-Length", "114506");
		connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
		connection.setRequestProperty("Cookie", "gsScrollPos=0; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; __utma=152568635.1581997736.1455313479.1457760018.1457801266.5; __utmc=152568635; __utmz=152568635.1457801266.5.3.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PIError.aspx|utmcmd=referral; incap_ses_221_666243=NEmICnShS0SX+lRFkycRAwB25FYAAAAA4DJAun04OQlA3OzfatELUQ==; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQUIPAAAAAABTX0gXoHBCygATrHOHndYo; incap_ses_237_666243=Mmsua3ucMlhdtOnqcf9JAzON5FYAAAAAC4aipx8DwInCjF5Jfe9zZg==");
		connection.setRequestProperty("Host", "publicindex.sccourts.org");
		connection.setRequestProperty("Origin", "http://publicindex.sccourts.org");
		connection.setRequestProperty("Referer", "http://publicindex.sccourts.org/Florence/PublicIndex/PISearch.aspx");
		connection.setRequestProperty("Upgrade-Insecure-Requests", "1");
		connection.setRequestProperty("User-Agent",	"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36");

		Map<String, String> params = new HashMap<>();
		
		params.put("__VIEWSTATE", "");
		params.put("__VIEWSTATEGENERATOR", "68338E7E");
		params.put("__EVENTVALIDATION",	"");
		params.put("ctl00$ContentPlaceHolder1$NoBotSearch$NoBotSearch_NoBotExtender_ClientState", "-850");		
		params.put("ctl00$ContentPlaceHolder1$DropDownListCaseTypes", fields.get("casetype"));
		if (fields.containsKey("lastnamephrase")) {
			params.put("ctl00$ContentPlaceHolder1$TextBoxlastName", fields.get("lastnamephrase"));
		}
		params.put("ctl00$ContentPlaceHolder1$IndexGroup", "RadioButtonIndexAll");
		params.put("ctl00$ContentPlaceHolder1$ButtonSearch", "Search");
		params.put("ctl00$ContentPlaceHolder1$NameSearchOption", "RadioButtonNameBeginsWith");
		//params.put("ctl00$ContentPlaceHolder1$mpeTarget", "");
		
		StringBuilder postData = new StringBuilder();
		for (Map.Entry<String, String> param : params.entrySet()) {
			if (postData.length() != 0)
				postData.append('&');
			
			postData.append(URLEncoder.encode(param.getKey(), "UTF-8"));
			postData.append('=');
			postData.append(URLEncoder.encode(String.valueOf(param.getValue()),
					"UTF-8"));
		}
		byte[] postDataBytes = postData.toString().getBytes("UTF-8");
		connection.setDoOutput(true);
		connection.getOutputStream().write(postDataBytes);
		
		
		return connection.getInputStream();
		
	}

	public static InputStream getCrawledData(String url, String method)
				throws IOException {
			
			System.out.println("Crawling for url - " + url);
			
			URL urlInstance = new URL(url);
			HttpURLConnection connection = (HttpURLConnection) urlInstance.openConnection();
		//	connection.setRequestMethod(method);

			connection.setRequestProperty("Accept",	"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8");
			// connection.setRequestProperty("Accept-Encoding","gzip, deflate");
			connection.setRequestProperty("Accept-Language", "en-US,en;q=0.8");
			connection.setRequestProperty("Cache-Control", "max-age=0");
			connection.setRequestProperty("Connection", "keep-alive");
			//connection.setRequestProperty("Cookie", "gsScrollPos=0; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; __utma=152568635.1581997736.1455313479.1457760018.1457801266.5; __utmc=152568635; __utmz=152568635.1457801266.5.3.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PIError.aspx|utmcmd=referral; incap_ses_221_666243=NEmICnShS0SX+lRFkycRAwB25FYAAAAA4DJAun04OQlA3OzfatELUQ==; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQUIPAAAAAABTX0gXoHBCygATrHOHndYo; incap_ses_237_666243=Mmsua3ucMlhdtOnqcf9JAzON5FYAAAAAC4aipx8DwInCjF5Jfe9zZg==");
			connection.setRequestProperty("Cookie", "gsScrollPos=; ASP.NET_SessionId=j4v3c1cicornin44vq0uqnzl; gsScrollPos=0; incap_ses_237_666243=H+EKIJ45y36WpT/vcf9JA8hc5lYAAAAA3StPmKBg0CU38rMy049ecA==; incap_ses_220_666243=ewo+AoqEmTKWEGqQFaINAxMo51YAAAAAQmh80cxm2tPuAJKXKW7QgA==; __utma=152568635.1581997736.1455313479.1457801266.1457992530.6; __utmc=152568635; __utmz=152568635.1457992530.6.4.utmccn=(referral)|utmcsr=publicindex.sccourts.org|utmcct=/Florence/PublicIndex/PISearch.aspx|utmcmd=referral; visid_incap_666243=4ZdB3MViQwiIYS2jB2fd9G9SvlYAAAAAQkIPAAAAAACA68hyAZ6C1b1n2tMjJhoix/6MhmdjwyZ2; incap_ses_221_666243=kKYEPSEwb3BNPrtPkycRAyV351YAAAAAxmLVIY7hviPCifny2/yq8Q==");
			connection.setRequestProperty("Host", "publicindex.sccourts.org");
			connection.setRequestProperty("Origin", "http://publicindex.sccourts.org");
			connection.setRequestProperty("Referer", "http://publicindex.sccourts.org/Florence/PublicIndex/PISearch.aspx");
			connection.setRequestProperty("Upgrade-Insecure-Requests", "1");
			connection.setRequestProperty("User-Agent",	"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36");

			//connection.setDoOutput(true);
			if (connection.getResponseCode() != 200) {
				return null;
			}
			
			return connection.getInputStream();
			
		}

	public static void crawl(String url, String method, String phrase)
			throws IOException {
		
		// BufferedReader in = new BufferedReader(new
		// InputStreamReader(connection.getInputStream(), "UTF-8"));
		// String line = "";
		// while ((line = in.readLine()) != null) {
		// System.out.println(line);in.readLine();
		// }
		// for ( int c = in.read(); c != -1; c = in.read() )
		// System.out.print((char)c);
	//	extractData(connection.getInputStream(), phrase+"_data.csv");
	}
	
	public static List<String> extractNameLinks(InputStream is, String phrase, String s_url) 
			throws IOException, URISyntaxException {
		Document doc = Jsoup.parse(is, null, "");
		if (doc == null) {
			System.out.println(phrase + " - Document is null");
		}
		if (doc.body().toString().contains("Your search results exceeded the maximum number of records allowed and all records were not returned")) {
			System.out.println(phrase +" Exceeded num of records - 1");
		}

		Element captchaEle = doc.getElementById("c_pierror_contentplaceholder1_botdetectcaptcha_CaptchaDiv");
		if (captchaEle != null) {
			System.out.println("Need to revalidate with captcha");
			String captchaImgUrl = getCaptchaImgUrl(doc);
			String captchaId = getCaptchaId(captchaImgUrl);
			extractAndSaveCaptcha(captchaImgUrl);
			String text = getCaptchaText();
			
			if (text == null) {
				System.out.println(" No captcha text");
				return null;
			
			}
			revalidateWithCaptcha(s_url, text, captchaId);
			return null;
			
		}
		
		List<String> urls = new ArrayList<>();
		Element table = doc.getElementById("ContentPlaceHolder1_SearchResults");
		if (table == null) {
			System.out.println("Table was null in Extract Name Links");
			return urls;
		}
		
		Elements links = table.getElementsByTag("a");		
		for (Element link: links) {
		    String url = link.attr("href");
		    String text = link.text();
		    //System.out.println(text + ", " + s_url+"/"+url);
		    urls.add(s_url+"/"+url);
		    
		}		
		return urls;			
	}
	

	public static String extractDetails(InputStream is, String url, String s_url) 
			throws IOException, URISyntaxException {
		Document doc = Jsoup.parse(is, null, "");
		if (doc == null) {
			System.out.println(url + " - Document is null");
		}	
		
		//System.out.println(doc.body());
		
		Element captcha = doc.getElementById("c_pierror_contentplaceholder1_botdetectcaptcha_CaptchaDiv");
		if (captcha != null) {
			
			System.out.println("Need to revalidate with captcha");
			String captchaImgUrl = getCaptchaImgUrl(doc);
			String captchaId = getCaptchaId(captchaImgUrl);
			extractAndSaveCaptcha(captchaImgUrl);
			String text = getCaptchaText();
			
			if (text == null) {
				System.out.println(" No captcha text");
				return null;			
			}
			revalidateWithCaptcha(s_url, text, captchaId);
			return null;
		}
		
		Element table = doc.getElementById("ContentPlaceHolder1_PanelDetails");
		if (table == null) {
			System.out.println("Table was null in Extract details");
			System.out.println(doc.body());
			return null;
		}
		Elements rows = table.select("tr");
		if (rows == null) {
			System.out.println(url +" No rows found");
		}
		
		StringBuffer sbuffer = new StringBuffer();

		boolean useDelimiter = false;
		for (Element row : rows) {
			Elements tds = row.select("td");			
			
			for (int ind = 0; ind < tds.size(); ++ind) {
				
				Element td = tds.get(ind);
				String toWrite = " ";
				
				if ("dataLabel".equals(td.attr("class")) && "Case Number:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Case Type:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Status:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Disposition:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Disposition Date:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Court Agency:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Case Sub Type:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Assigned Judge:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Filed Date:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Disposition Judge:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else if ("dataLabel".equals(td.attr("class")) && "Arrest Date:".equals(td.text()) )
					toWrite = tds.get(ind + 1).text().isEmpty() ? " " : tds.get(ind + 1).text();
				else 
					continue;
				
				if (useDelimiter) {
					sbuffer.append(";");					
				}
				sbuffer.append(toWrite);
				useDelimiter = true;
			 //System.out.println(td.text());
			}
			//sbuffer.append("\n");
		}
			
			
		table = doc.getElementById("ContentPlaceHolder1_LabelFullCase1");
		if (table != null) {
			rows = table.select("tr");
			if (rows == null) {
				System.out.println(url +" No rows found");
			}
			
			
			for (int r_ind = 1; r_ind <= 2; ++r_ind) {
				
				Elements tds = null;
				if (r_ind < rows.size()) {
					tds = rows.get(r_ind).select("td");
					//System.out.println(tds.text());
				}
				
				for (int ind = 0; ind < 8; ++ind) {
					String toWrite = " ";
					if (tds != null && tds.size() > ind) {
						Element td = tds.get(ind);
						toWrite = (td == null || td.text().isEmpty()) ? " ": td.text();
					}
					
					sbuffer.append(";");
					sbuffer.append(toWrite);
				}
			}
		}
		
		
		table = doc.getElementById("ContentPlaceHolder1_LabelFullCase2");
		if (table != null) {
			rows = table.select("tr");
			if (rows == null) {
				System.out.println(url +" No rows found");
			}
			for (Element row : rows) {
				Elements tds = row.select("td");			
				for (Element td : tds) {
					String toWrite = td.text().isEmpty() ? " ": td.text();
				//	System.out.println(toWrite);
					sbuffer.append(";");
					sbuffer.append(toWrite);
				}
			}
		}
		
		table = doc.getElementById("ContentPlaceHolder1_LabelFullCase3");
		if (table != null) {
			rows = table.select("tr");
			if (rows == null) {
				System.out.println(url +" No rows found");
			}
			for (Element row : rows) {
				Elements tds = row.select("td");			
				for (Element td : tds) {
					String toWrite = td.text().isEmpty() ? " ": td.text();
					//System.out.println(toWrite);
					sbuffer.append(";");
					sbuffer.append(toWrite);
				}
			}
		}
		
		return sbuffer.toString();

	}
	
	
	public static String extractList(InputStream is, String fileName) throws IOException {
		Document doc = Jsoup.parse(is, null, "");
		if (doc == null) {
			System.out.println(fileName + " - Document is null");
		}
		if (doc.body().toString().contains("Your search results exceeded the maximum number of records allowed and all records were not returned")) {
			System.out.println(fileName +" Exceeded num of records - 1");
		}
		
		
//		Element alertMessage = doc.getElementById("ContentPlaceHolder1_LabelAlertMessage");		
//		if (alertMessage != null &&
//			alertMessage.text().equals(
//				"Your search results exceeded the maximum number of records allowed and all records were not returned")){
//			System.out.println(fileName +" Exceeded num of records - 2");			
//		}

		Element table = doc.getElementById("ContentPlaceHolder1_SearchResults");
		Elements rows = table.select("tr");
		if (rows == null) {
			System.out.println(fileName +" No rows found");
		}
		Elements ths = rows.select("th");

		String thstr = "";
		for (Element th : ths) {
			thstr += th.text() + ";";
		}
		StringBuffer sbuffer = new StringBuffer();
		sbuffer.append(thstr+"\n");
		//System.out.println(thstr);

		for (Element row : rows) {
			Elements tds = row.select("td");			
			int i = 0;
			for (Element td : tds) {
				if (i != 0 ) {
					sbuffer.append(";");
				}
				String toWrite = td.text().isEmpty() ? " ": td.text();
				sbuffer.append(toWrite);
				i++;
			 //System.out.println(td.text());
			}
			sbuffer.append("\n");
		//	System.out.println(tds.text()); // -->This will pring everything
											// in the row
		}
		System.out.println("Writing to file - " + fileName);
		PrintWriter writer = new PrintWriter(fileName, "UTF-8");
		writer.print(sbuffer.toString());;
		writer.close();
		
		
		return sbuffer.toString();

		
	}

	public static void main(String[] args) throws Exception {
		if (args.length != 1) {
			throw new Exception("Insufficient args");			
		}
		
		String county = args[0];
		String [] alphabets = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j",
				"k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w",
				"x", "y", "z"};
		List<String> caseTypes = new ArrayList<>();
		caseTypes.add("CR  ");
		caseTypes.add("GS  ");
		
		
		PrintWriter writer = new PrintWriter(new FileWriter(county + "-crawled_data.csv", true));
		
		Map<String, String> fields = new HashMap<>();
		fields.put("lastnamephrase", "");
		fields.put("casetype", "");
		
//		MedCrawler.crawl("http://publicindex.sccourts.org/Florence/PublicIndex/PISearch.aspx", "POST", "jo");
		String s_url = HOST +"/" + county + "/PublicIndex";
		for (int i = 1; i < 2; ++i) {
			for (int j = 7; j < 10 ; ++j) {
				
				String phrase = alphabets[i]+alphabets[j];				
				fields.put("lastnamephrase", phrase);
				
				for (String caseType : caseTypes) {					
					fields.put("casetype", caseType);
					
					if (caseType.equals("CR  ") && phrase.equals("be")) continue;
					
					List<String> urls = null;
					InputStream is = MedCrawler.getListByFields(s_url , "POST", fields);
					urls = MedCrawler.extractNameLinks(is, phrase, s_url);
					
					while (urls == null) {
						System.out.println("Waiting for Session to be revalidated");
						is = MedCrawler.getListByFields(s_url , "POST", fields);
						urls = MedCrawler.extractNameLinks(is, phrase, s_url);	
					}					
					is.close();
					
					int k = 0;					
					while (!urls.isEmpty()) {
						String u = urls.get(0);
						urls.remove(0);
						k++;
						//if (caseType.equals("CR  ") && k <= 716) continue;
						is = getCrawledData(u, "GET");
						if (is == null) {
							continue;
						}
						String line = extractDetails(is, u, s_url);
						is.close();
						if (line == null) {
							urls.add(u);
							k--;
							Thread.sleep(1000);
							continue;
						}
						
						System.out.println("Url - " + k);
						//System.out.println(line);
						writer.println(line);
						writer.flush();
						Thread.sleep(500);
						
					}
//					for (String u : urls) {
//						k++;
//						//if (caseType.equals("GS  ") && phrase.equals("ab") && k <= 114) continue;
//						is = getCrawledData(u, "GET");
//						String line = extractDetails(is, u, s_url);
//						if 
//						is.close();
//						System.out.println("Url - " + k);
//						//System.out.println(line);
//						writer.println(line);
//						writer.flush();
//						Thread.sleep(500);						
//					}
					
					
				}
				Thread.sleep(5000);				
			}
		}
		writer.close();	
		
	}

}
